/**
 * Redis 官网的一段简介：
 * The open source, in-memory data store used by millions of developers as a database, cache, streaming engine, and message broker.
 * Redis是一个开源（BSD许可），内存存储的数据结构服务器，可用作数据库，高速缓存和消息队列代理。
 * 它支持字符串、哈希表、列表、集合、有序集合，位图，hyperloglogs等数据类型。
 * 内置复制、Lua脚本、LRU收回、事务以及不同级别磁盘持久化功能，同时通过Redis Sentinel提供高可用，通过Redis Cluster提供自动分区。
 *
 * Redis 是一个开源的使用ANSI C 语言编写、遵循BSD 协议、支持网络、可基于内存亦可持久化的日志型、Key-Value 数据库，并提供多种语言的API。
 * 它通常被称为数据结构服务器，因为值（Value）可以是字符串（String），哈希（Map），列表（List），集合（Set）和有序集合（Sorted Sets）等类型。
 *
 * Redis 简介：Redis 是完全开源免费的，遵循BDS 协议，是一个高性能的key-value 数据库。
 *
 * Redis 与其他key-value 缓存产品有以下是三个特点：
 * Redis 支持数据的持久化，可以将内存中的数据保存在磁盘，重启的时候可以再次加载进行使用。
 * Redis 不仅仅支持简单的key-value 类型的数据，同时还提供list，set，zset，hash 等数据结构的存储。
 * Redis 支持数据的备份，即master-slave 模式的数据备份。
 *
 * Redis 优势：
 * 性能极高-Redis 能读的速度是110000次/s，写的速度是81000次/s。
 * 丰富的数据类型-Redis 支持二进制案例的Strings，Lists，Hashes，Sets及Ordered Sets 数据类型的操作。
 * 原子-Redis 的所有操作都是原子性的，同时Redis 还支持对几个操作合并后的原子执行。
 * 丰富的特新-Redis 还支持publish/subscribe，通知，key 过期等特性。
 *
 * Redis 与其他key-value 存储有什么不同？
 * Redis 有着更为复杂的数据结构并且提供对他们的原子性操作，这是一个不同于其他数据库的进化路径。Redis 的数据类型都是基于基本数据结构的同时对程序员透明，无需进行额外的抽象。
 * Redis 运行在内存中但是可以持久化到磁盘，所以在对不同数据集进行高速读写时需要权衡内存，因为数据量不能大于硬件内存。在内存数据库方面的另一个优点是，
 * 相比于磁盘上相同的复杂的数据结构，在内存中操作起来非常简单，这样Redis 可以做很多内部复杂性很强的事情。同时，在磁盘格式方面他们是紧凑的以追加的方式
 * 产生的，因为他们并不需要进行随机访问。
 *
 * 一个很简单的问题，为什么要用缓存？
 * 主要原因是数据的查询比较耗时，而使用缓存能大大节省数据访问的时间。举个例子，假如表中有2千万个用户信息，在加载用户信息时，一次数据库查询大致的时间
 * 在数白毫秒级别，这仅仅是一次查询，如果是频繁多次的数据库查询，效率就会更低。
 * 提升效率的通常做法是把数据加入缓存，每次加载数据之前，先去缓存中加载，如果为空，再去查询数据库并将数据加入缓存，这样可以大大提升数据访问的效率。
 * 从大的层面来说，在开发高并发系统时，有三把利器用来保护系统：缓存、降级和限流。其中的缓存是最为重要的一个应对高并发的方式。而Redis 缓存中间件，
 * 目前已经成为缓存的事实标准。
 *
 */
package org.james.gosl.spring.boot.data.redis;